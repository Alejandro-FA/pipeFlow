/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  7.0                                   |
|   \\  /    A nd           | Website:  https://openfoam.org                  |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

radius      0.025; // 0.081
radiusNeg  -0.025;
box         0.008; // 0.010
boxNeg     -0.008;
zMax        0.30; //0.150
zMin       -0.30;

nR          15; // 7
nZ          20; // 20

verbose no;

geometry
{
    cylinder
    {
	// Axis point at the start i Axis point at the end i Cylinder radius
        type      searchableCylinder;
        point1    (0 0 -1);
        point2    (0 0  1);
        radius    $radius;
    }
}


// Scaling factor for the vertex coordinates
scale 1;

// List of vertex coordinates
// Si no es posa nom, els vertexs tenen nom per l'ordre en que s'han col·locat, és a dir 0, 1, 2, 3...
vertices
(
    // Inner
    ($boxNeg $boxNeg $zMin)
    ($box    $boxNeg $zMin)
    ($boxNeg $box    $zMin)
    ($box    $box    $zMin)

    // Outer block points
    project ($radiusNeg $radiusNeg $zMin) (cylinder)
    project ($radius    $radiusNeg $zMin) (cylinder)
    project ($radiusNeg $radius    $zMin) (cylinder)
    project ($radius    $radius    $zMin) (cylinder)

    // Inner
    ($boxNeg $boxNeg $zMax)
    ($box    $boxNeg $zMax)
    ($boxNeg $box    $zMax)
    ($box    $box    $zMax)

    // Outer block points
    project ($radiusNeg $radiusNeg $zMax) (cylinder)
    project ($radius    $radiusNeg $zMax) (cylinder)
    project ($radiusNeg $radius    $zMax) (cylinder)
    project ($radius    $radius    $zMax) (cylinder)
);

// Ordered list of vertex labels and mesh size
// ($nR $nR $nZ) numbers of cells in each direction
// simpleGrading cell expansion ratios
// The shape is always hex since the blocks are always hexahedra. 
blocks
(
    // Arc 3D inferior
    hex ( 4  5  1  0 12 13  9  8) ($nR $nR $nZ) simpleGrading (1 1 1)
    // Arc 3D esquerra
    hex ( 4  0  2  6 12  8 10 14) ($nR $nR $nZ) simpleGrading (1 1 1)
    // Arc 3D dret
    hex ( 1  5  7  3  9 13 15 11) ($nR $nR $nZ) simpleGrading (1 1 1)
    // Arc 3D superior
    hex ( 2  3  7  6 10 11 15 14) ($nR $nR $nZ) simpleGrading (1 1 1)
    // Rectangle interior
    hex ( 0  1  3  2  8  9 11 10) ($nR $nR $nZ) simpleGrading (1 1 1)
);

edges
(
    // Arc inferior
    project  4  5 (cylinder)
    // Arc dret
    project  7  5 (cylinder)
    // Arc superior
    project  6  7 (cylinder)
    // Arc esquerra
    project  4  6 (cylinder)
    // Arc inferior
    project 12 13 (cylinder)
    // Arc dret
    project 13 15 (cylinder)
    // Arc esquerra
    project 12 14 (cylinder)
    // Arc superior
    project 14 15 (cylinder)
);

boundary
(
   
  	inlet
		{
			type patch;
			faces
			(
				(0 1 5 4)
				(1 3 7 5)
				(2 6 7 3)
				(0 4 6 2)
				(0 2 3 1)      
			);
		}
    
	outlet
		{
		    type patch;
		    faces
		    (
		        (8 12 13 9)
		        (9 13 15 11)
		        (10 11 15 14)
		        (8 10 14 12)
		        (8 9 11 10)
		    );
		}     
    
    walls
		{
		    type wall;
		    faces
		    (
		        (4 5 13 12)
		        (4 12 14 6)
		        (5 7 15 13)
		        (6 14 15 7)
		        
		    );
		}
);

mergePatchPairs
(
);
    
// ************************************************************************* //
